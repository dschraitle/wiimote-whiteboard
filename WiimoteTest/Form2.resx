<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCAFGAFADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD22XFzIxYDy0fAVhkM
        fU+vfj2zRIVt4mlmuPKjQZZmcKifnSWWW02FjyzDJ/EZ/nWfqca3WsWVvOpe3jV5jH2kYHgH1xjNO4rX
        JIdY0+dwkd+ST0JyAfxNX9p/56yenWuSs9YvL6XT2voraSx1AqscSNzGdjsxUjnK7QGPY9MV02nPI1hF
        5rbnXdGXIwW2sRn0ycZpXuXODgywEOf9Y/50pQ4/1j/nS5ozTJG7D/z0f/vqk2N/z1k/76NPooAieNmB
        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
</value>
  </data>
  <data name="homepicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCAAZABkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2q8vI4YWklcRwr1J/
        zzXKS+JrlrwPCirbL/yyI5YepPY/T9ad4lS4WeJ5J90Lk+XGBjZgDP1PPWqsOg3c9qlwrwhHXeAWOcfl
        XoUaVKMOeb3PLxFatKo6dNWsdTZ3sN/b+dA2R0Knqp9DU2PYflXH6FHPJqG6CYRFU3NkZDLkAjH411+8
        +hrnr01TnZHXhazrQ5mrGN4jtbi6W1EELybS+7aM4ztx/I1nRnXooVhRLhY1G0KIxwPyrrD1b60w9KcM
        Q4wUWk7E1MKpTc1Jpvsc9oFnc2t5K00EkamLaCwxzuFdDupO/wCFNqKlR1JczNaNJUocqP/Z
</value>
  </data>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>147, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>275, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>